apiVersion: apps/v1
kind: {{ .Values.workload }}
metadata:
  name: {{ template "exim.fullname" . }}
  labels:
    app: {{ template "exim.name" . }}
    chart: {{ template "exim.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    {{- if .Values.global.enableAuth }}
    aadpodidbinding: {{ .Values.aadIdentityName }}
    {{- end }}
  annotations:
    {{- if .Values.prometheus.enabled }}
    prometheus.io/scrape: "true"
    prometheus.io/path: {{ .Values.prometheus.path | quote }}
    prometheus.io/port: {{ .Values.prometheus.port | quote }}
    {{- end }}
spec:
  {{ if eq .Values.workload "StatefulSet" }}serviceName: {{ template "exim.name" . }}{{ end }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "exim.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "exim.name" . }}
        release: {{ .Release.Name }}
        {{- if .Values.global.enableAuth }}
        aadpodidbinding: {{ .Values.aadIdentityName }}
        {{- end }}
    spec:
      serviceAccountName: {{ template "exim.serviceAccountName" . }}
      shareProcessNamespace: true
      securityContext:
        runAsUser: 100
        runAsGroup: 101
        fsGroup: 101
      containers:
      - name: {{ template "exim.name" . }}
        image: '{{ .Values.image.repository }}:{{ .Values.image.tag }}'
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        envFrom:
        - configMapRef:
            name: {{ template "exim.fullname" . }}
        - secretRef:
            name: {{ template "exim.fullname" . }}
        ports:
          - name: smtp
            containerPort: 25
        securityContext:
          allowPrivilegeEscalation: false
        {{- if or (eq .Values.workload "StatefulSet") .Values.fluentbit.enabled }}
        volumeMounts:
          {{- if eq .Values.workload "StatefulSet" }}
          - mountPath: "/var/spool/exim"
            name: {{ template "exim.name" . }}-data
          {{- end }}
          {{- if .Values.global.enableOutboundTls }}
          - mountPath: "/etc/ssl/default-outbound"
            name: exim-outbound-certs
            readOnly: true
          {{- end }}
          {{- if .Values.global.enableInboundTls }}
          - mountPath: "/etc/ssl/inbound"
            name: exim-inbound-certs
            readOnly: true
          {{- end }}
          {{- if .Values.global.enableAuth }}
          - mountPath: "/etc/exim/auth"
            name: exim-passwd
            readOnly: true
          {{- end }}
          {{- if .Values.fluentbit.enabled }}
          - mountPath: /var/log/exim
            name: log-volume
          {{- end }}
        {{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
      {{- if .Values.fluentbit.enabled }}
      - name: fluentbit
        image: '{{ .Values.fluentbit.image.repository }}:{{ .Values.fluentbit.image.tag }}'
        imagePullPolicy: IfNotPresent
        volumeMounts:
          - name: fluentbit-config-volume
            mountPath: /fluent-bit/etc/
          - name: log-volume
            mountPath: /var/log/exim
      {{- end }}
      {{- if .Values.eximexporter.enabled }}
      - name: eximexporter
        image: '{{ .Values.eximexporter.image.repository }}:{{ .Values.eximexporter.image.tag }}'
        imagePullPolicy: IfNotPresent
        env:
          - name: EXIM_EXECUTABLE
            value: exim
          - name: EXIM_QUEUE_DIR
            value: /var/spool/exim/input
          - name: EXIM_LOG_PATH
            value: /var/log/exim
        ports:
          - name: eximexporter
            containerPort: 9636
        volumeMounts:
          - name: log-volume
            mountPath: /var/log/exim
          {{- if eq .Values.workload "StatefulSet" }}
          - name: {{ template "exim.name" . }}-data
            mountPath: /var/spool/exim
          {{- end }}
      {{- end }}

    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      {{- if or (eq .Values.workload "StatefulSet") .Values.fluentbit.enabled }}
      volumes:
        {{- if .Values.fluentbit.enabled }}
        - name: log-volume
          emptyDir: {}
        - name: fluentbit-config-volume
          configMap:
            name: {{ template "exim.fullname" . }}-fluentbit
        {{- end }}
        {{- if eq .Values.workload "StatefulSet" }}
        - name: {{ template "exim.name" . }}-data
          persistentVolumeClaim:
            claimName: {{ template "exim.name" . }}-data
        {{- end }}
        {{- if .Values.global.enableAuth }}
        - name: exim-passwd
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "mailrelay-auth-keyvault-secret-provider"
        {{- end }}
        {{- if .Values.global.enableOutboundTls }}
        - name: exim-outbound-certs
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "mailrelay-outbound-keyvault-certificate-provider"
        {{- end }}
        {{- if .Values.global.enableInboundTls }}
        - name: exim-inbound-certs
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "mailrelay-inbound-keyvault-certificate-provider"
        {{- end }}
      {{- end }}

  {{- if eq .Values.workload "StatefulSet" }}
  volumeClaimTemplates:
    - metadata:
        name: {{ template "exim.name" . }}-data
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: {{ .Values.volumeClaim.storageClass | default "managed-premium" }}
        resources:
          requests:
            storage: {{ .Values.volumeClaim.storageSize | default "50Gi" }}
  {{- end }}
